from math import exp


# Функция для решения дифференциального уравнения
def solve_eqn(f, x0, y0, x_):
    # Количество отрезков, на которые делится интервал
    # поиска решения уравнения
    n = 1000
    # Расстояние между соседними узловыми точками
    dx = (x_ - x0) / n
    # Начальная точка
    x_ = x0
    # Начальное значение функции
    y_ = y0
    # Оператор цикла для вычисления решения
    for _ in range(1, n + 1):
        # Значение функции в узловой точке
        y_ += dx * f(x_, y_)
        # Следующая узловая точка
        x_ += dx
    # Результат функции
    return y_


# Функция, определяющая дифференциальное уравнение
def diff_eqn(x_, y_):
    # Результат функции
    return 2 * x_ * x_ - y_ * y_


# Функция точного решения уравнения
def y(x_):
    # Результат функции
    return 2 * (x_ - 1) + 5 * exp(-x_)


# Шаг приращения по аргументу
h = 0.5
# Вычисление результата для нескольких
# значений аргумента
for k in range(0, 6):
    x = k * h
    print("Числовое решение:")
    # Числовое решение
    print("x=", x, "-> y(x)=", solve_eqn(diff_eqn, 0, 3, x))
    print("Точное решение:")
    # Точное решение
    print("x=", x, "-> y(x)=", y(x))

input("Нажмите на Enter для завершения")
